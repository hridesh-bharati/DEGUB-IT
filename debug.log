import { useState, useEffect } from 'react';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { registrateStudent, uploadPhoto } from "../../../api/studentApi/api";
import { getCourseList } from '../../../api/adminApi/api';
import Time from './Time'

const AdmissionForm = () => {
  const initialFormData = {
    name: "",
    fatherName: "",
    motherName: "",
    gender: "",
    aadhaar: "",
    email: "",
    address: "",
    mobileNumber: "",
    dob: "",
    course: "",
    category: "",
    otherCategory: "",
    photo: "",
    checkboxChecked: false,
  };
  const [formData, setFormData] = useState(initialFormData);
  const [submitEnabled, setSubmitEnabled] = useState(false);
  const [error, setError] = useState("");
  const [courseList, setCourseList] = useState([]);
  const [photoUploaded, setPhotoUploaded] = useState(false);
  const [photoPreview, setPhotoPreview] = useState("");


  useEffect(() => {
    async function getCourseListHandler() {
      const rspns = await getCourseList();
      if (rspns.ackbool == 1) {
        setCourseList(rspns.message);
      }
    }
    getCourseListHandler();
  }, []);

  useEffect(() => {
    const { name, fatherName, motherName, gender, aadhaar, email, address, mobileNumber, dob, course, category, checkboxChecked } = formData;
    setSubmitEnabled(
      name && fatherName && motherName && gender && aadhaar.length === 12 && /^[0-9]{12}$/.test(aadhaar) && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email) && /^[6-9]\d{9}$/.test(mobileNumber) && address && dob && course && category && checkboxChecked
    );
  }, [formData]);

  const handleChange = (e) => {
    const { name, type, checked, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const handlePhotoChange = async (e) => {
    const image = e.target.files[0];
    if (image) {
      const rspns = await uploadPhoto(image);
      if (rspns.url) {
        setPhotoUploaded(true);
        setPhotoPreview(rspns.url);
        setFormData(prevData => ({
          ...prevData,
          photo: rspns.url
        }));
      }
    } else {
      toast.error('please Select Profile Photo');
    }
  }
  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const rspns = await registrateStudent(formData);
      if (rspns.ackbool == 1) {
        toast.success(rspns.message);
        resetForm();
      }
    } catch (error) {
      setError("Registration failed");
    }
  };
  function resetForm() {
    setFormData(initialFormData);
    setUploadStatus(false);
    setPhotoPreview("");
    setError("");

  };

  return (
    <div className=" shadow  pt-4 mt-3 rounded">
      <form onSubmit={handleSubmit} className=' container-fluid mx-0 px-3 admission-form px-lg-3'>
        <h3 className="text-center pt-3"> <b style={{ color: "maroon" }}>CANDIDATE REGISTRATION FORM FOR NEW ADMISSION</b> </h3>
        <p className="p-0 m-0 d-flex">
          <small>  <Time /></small>
          <marquee behavior="alternate" className='smallText' style={{ color: "maroon" }}> ऑनलाइन पंजीकरण करने हेतु पंजीकरण फॉर्म </marquee>
        </p>
        <div className="row AdmRow">
          <lable className="small mt-1">A. Student's Personal Details</lable>
          <div className="row">
            <div className="col-md-5">
              1: Student's Name / छात्र का   नाम *
            </div>
            <div className="col-md-7">
              <input type="text" name="name" value={formData.name} onChange={handleChange} className="form-control" placeholder="Name" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              2:Father's Name / पिता का   नाम *
            </div>
            <div className="col-md-7">
              <input type="text" name="fatherName" value={formData.fatherName} onChange={handleChange} className="form-control" placeholder="Father's Name" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              3: Mother's Name / माता का   नाम *
            </div>
            <div className="col-md-7">
              <input type="text" name="motherName" value={formData.motherName} onChange={handleChange} className="form-control" placeholder="Mother's Name" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              4:  Gender / लिंग *
            </div>
            <div className="col-md-7">
              <select name="gender" value={formData.gender} onChange={handleChange} className="form-select" required>
                <option value="">Select Gender</option>
                <option value="male">Male</option>
                <option value="female">Female</option>
                <option value="other">Other</option>
              </select>
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              5: Aadhar Card Number / आधार कार्ड संख्या *
            </div>
            <div className="col-md-7">
              <input type="text" name="aadhaar" minLength={12} maxLength={12} value={formData.aadhaar} onChange={handleChange} className="form-control" placeholder="Aadhaar Number" required />
            </div>
          </div>
          <lable className="small mt-4">B. Contact Details</lable>
          <div className="row">
            <div className="col-md-5">
              1: Mobile Number / मोबाइल   नंबर *
            </div>
            <div className="col-md-7">
              <input type="text" name="mobileNumber" value={formData.mobileNumber} onChange={handleChange} className="form-control" placeholder="Mobile Number (10 digits)" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              2: Email / ईमेल *
            </div>
            <div className="col-md-7">
              <input type="email" name="email" value={formData.email} onChange={handleChange} className="form-control" placeholder="Email" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              3: Date of birth / जन्म   तिथि *
            </div>
            <div className="col-md-7">
              <input type="date" name="dob" value={formData.dob} onChange={handleChange} className="form-control" placeholder="Date of Birth" required />
            </div>
          </div>
          <div className="row">
            <div className="col-md-5">
              4: Category / वर्ग *
            </div>
            <div className="col-md-7">
              <select name="category" value={formData.category} onChange={handleChange} className="form-select" required>
                <option value="">Select Category</option>
                <option value="General">General</option>
                <option value="OBC">OBC</option>
                <option value="SC/ST">SC/ST</option>
                <option value="Other">Other</option>
              </select>
            </div>
          </div>
          <div className="row AdmRow">
            <lable className="small mt-4 mb-1">C. Course for Student's *</lable>
            <div className="col-md-5">
              1: Course / कोर्स *
            </div>
            <div className="col-md-7">
              <select name="course" value={formData.course} onChange={handleChange} className="form-select" required>
                <option value="">Select Course</option>
                {courseList.map(course => (
                  <option key={course._id} value={course.name}>{course.name}</option>
                ))}
              </select>
            </div>
          </div>
          <div className="row">
            <lable className="small mb-1">D. Identification  Details / पहचान  विवरण *</lable>
            <div className="col-md-5">
              1: Enter complete address / पूरा पता दर्ज   करें *
            </div>
            <div className="col-md-7">
              <input rows='3'
                name="address" value={formData.address} onChange={handleChange} placeholder='Address' className="form-control" required
              />
            </div>
          </div>
          <div className="row">

            <div className="col-md-5">2: Passport Size Photo / पासपोर्ट साइज फोटो *</div>
            <div className="col-md-7">
              {photoUploaded ? (
                <div>
                  <img src={photoPreview} alt="Preview" className="img-fluid pt-2" width={100} />
                  <p className='text-success px-1'>Uploaded <i className="bi bi-check-lg"></i></p>
                </div>
              ) : (
                <input type="file" name="photo" onChange={handlePhotoChange} className="form-control" required />
              )}
            </div>
          </div>

          <div className="row bg-primary-subtle">
            <lable className="small mt-2">E. Declaration / घोषणा *</lable>
            <div className="p-1 m-0 w-100">

              <p className="my-2 smallText" id="declarationTextOne">
                <input type="checkbox" name="checkboxChecked" checked={formData.checkboxChecked} onChange={handleChange} className="form-check-input" required /> <code>*</code> I declare here that all the information provided by me in this form is correct,
                and all the entries filled in online application form have been duly checked.
                If any details mentioned in the online application form after official scrutiny are found to be erroneous/correct.
                If the truth is found, then it will be responsibility, if any action is taken against me by the department,
                it will be acceptable to me.
                I have no objection if I receive calls, e-mails and SMS for advertisement purpose by the institute.
              </p>

              {error && <p className="text-danger text-center mt-3">{error}</p>}
            </div>
            <div className="row container bg-primary-subtle text-center pb-4">
              <div className="col-12 m-auto text-center py-2 d-flex  justify-content-center">
                <button className="btn btn-primary fw-medium text-white mx-2 px-5" onClick={resetForm}  > Reset </button>
                <button type="submit" disabled={!submitEnabled} className="btn fw-medium text-white mx-2 px-5" style={{ background: 'green' }}> Send </button>

              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  );
};
export default AdmissionForm;
